@page "/personajes"
@using tarea3Pweb.Data
@using tarea3Pweb.models
@inject AppDbContext DbContext
@using Microsoft.EntityFrameworkCore;
@inject NavigationManager Navigation
@rendermode InteractiveServer
<PageTitle>Lista de Personajes </PageTitle>

<h3 class="mb-4">Lista de Personajes</h3>

<!-- Botón para agregar nuevo personaje -->
<button class="btn btn-primary mb-3" @onclick="AgregarPersonaje">Agregar Personaje</button>

<!-- Tabla con Bootstrap -->
<table class="table table-striped table-hover">
    <thead class="thead-dark">
        <tr>
            <th>Nombre</th>
            <th>Apodo</th>
            <th>Raza</th>
            <th>Edad</th>
            <th>Poder Característico</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var personaje in personajes)
        {
            <tr>
                <td>@personaje.Nombre</td>
                <td>@personaje.Apodo</td>
                <td>@personaje.Raza</td>
                <td>@personaje.Edad</td>
                <td>@personaje.PoderCaracteristico</td>
                <td>
                    @* Boton de detalle *@

                    <button class="btn btn-primary btn-sm me-2"
                        @onclick="@(() => Navigation.NavigateTo($"/personaje-detalles/{personaje.Id}"))">
                        <i class="fas fa-info-circle"></i> Detalle
                    </button>


                    <!-- Botón Editar con icono de lápiz -->
                    <button class="btn btn-warning btn-sm me-2" @onclick="() => EditarPersonaje(personaje.Id)">
                        <i class="fas fa-edit"></i> Editar
                    </button>

                    <!-- Botón Eliminar con icono de basura -->
                    <button class="btn btn-danger btn-sm" @onclick="() => EliminarPersonaje(personaje.Id)">
                        <i class="fas fa-trash"></i> Eliminar
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>


@code {
    private List<Personaje> personajes = new List<Personaje>();

    protected override async Task OnInitializedAsync()
    {
        personajes = await DbContext.Personajes.ToListAsync();
    }

    private void AgregarPersonaje()
    {
        // Navegar a la página de registro de personajes
        Navigation.NavigateTo("/registrar-personaje");
    }

    private void EditarPersonaje(int id)
    {
        // Navegar a la página de edición del personaje
        Navigation.NavigateTo($"/registrar-personaje/{id}");
    }

    private async Task EliminarPersonaje(int id)
    {
        var personaje = await DbContext.Personajes.FindAsync(id);
        if (personaje != null)
        {
            DbContext.Personajes.Remove(personaje);
            await DbContext.SaveChangesAsync();
            personajes = await DbContext.Personajes.ToListAsync(); // Refrescar la lista
        }
    }
}
